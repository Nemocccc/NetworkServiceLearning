# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.31

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = D:/CMake/bin/cmake.exe

# The command to remove a file.
RM = D:/CMake/bin/cmake.exe -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = D:/hw2/grpc

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = D:/hw2/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target package
package: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Run CPack packaging tool..."
	cd D:/hw2/build && D:/CMake/bin/cpack.exe --config ./CPackConfig.cmake
.PHONY : package

# Special rule for the target package
package/fast: package
.PHONY : package/fast

# Special rule for the target package_source
package_source:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Run CPack packaging tool for source..."
	cd D:/hw2/build && D:/CMake/bin/cpack.exe --config ./CPackSourceConfig.cmake D:/hw2/build/CPackSourceConfig.cmake
.PHONY : package_source

# Special rule for the target package_source
package_source/fast: package_source
.PHONY : package_source/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake cache editor..."
	D:/CMake/bin/cmake-gui.exe -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake to regenerate build system..."
	D:/CMake/bin/cmake.exe --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Available install components are: \"Devel\" \"Library\" \"Tools\" \"Unspecified\" \"libprotobuf\" \"libprotobuf-lite\" \"libprotoc\" \"libupb\" \"protobuf-export\" \"protobuf-headers\" \"protoc\" \"upb-generators\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	D:/CMake/bin/cmake.exe -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	D:/CMake/bin/cmake.exe -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	D:/CMake/bin/cmake.exe -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	D:/CMake/bin/cmake.exe -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	D:/CMake/bin/cmake.exe -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	D:/CMake/bin/cmake.exe -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	cd D:/hw2/build && $(CMAKE_COMMAND) -E cmake_progress_start D:/hw2/build/CMakeFiles D:/hw2/build/third_party/abseil-cpp/absl/flags//CMakeFiles/progress.marks
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/flags/all
	$(CMAKE_COMMAND) -E cmake_progress_start D:/hw2/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/flags/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/flags/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/flags/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd D:/hw2/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
third_party/abseil-cpp/absl/flags/CMakeFiles/flags_program_name.dir/rule:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/flags/CMakeFiles/flags_program_name.dir/rule
.PHONY : third_party/abseil-cpp/absl/flags/CMakeFiles/flags_program_name.dir/rule

# Convenience name for target.
flags_program_name: third_party/abseil-cpp/absl/flags/CMakeFiles/flags_program_name.dir/rule
.PHONY : flags_program_name

# fast build rule for target.
flags_program_name/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_program_name.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_program_name.dir/build
.PHONY : flags_program_name/fast

# Convenience name for target.
third_party/abseil-cpp/absl/flags/CMakeFiles/flags_config.dir/rule:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/flags/CMakeFiles/flags_config.dir/rule
.PHONY : third_party/abseil-cpp/absl/flags/CMakeFiles/flags_config.dir/rule

# Convenience name for target.
flags_config: third_party/abseil-cpp/absl/flags/CMakeFiles/flags_config.dir/rule
.PHONY : flags_config

# fast build rule for target.
flags_config/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_config.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_config.dir/build
.PHONY : flags_config/fast

# Convenience name for target.
third_party/abseil-cpp/absl/flags/CMakeFiles/flags_marshalling.dir/rule:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/flags/CMakeFiles/flags_marshalling.dir/rule
.PHONY : third_party/abseil-cpp/absl/flags/CMakeFiles/flags_marshalling.dir/rule

# Convenience name for target.
flags_marshalling: third_party/abseil-cpp/absl/flags/CMakeFiles/flags_marshalling.dir/rule
.PHONY : flags_marshalling

# fast build rule for target.
flags_marshalling/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_marshalling.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_marshalling.dir/build
.PHONY : flags_marshalling/fast

# Convenience name for target.
third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag_internal.dir/rule:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag_internal.dir/rule
.PHONY : third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag_internal.dir/rule

# Convenience name for target.
flags_commandlineflag_internal: third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag_internal.dir/rule
.PHONY : flags_commandlineflag_internal

# fast build rule for target.
flags_commandlineflag_internal/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag_internal.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag_internal.dir/build
.PHONY : flags_commandlineflag_internal/fast

# Convenience name for target.
third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag.dir/rule:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag.dir/rule
.PHONY : third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag.dir/rule

# Convenience name for target.
flags_commandlineflag: third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag.dir/rule
.PHONY : flags_commandlineflag

# fast build rule for target.
flags_commandlineflag/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag.dir/build
.PHONY : flags_commandlineflag/fast

# Convenience name for target.
third_party/abseil-cpp/absl/flags/CMakeFiles/flags_private_handle_accessor.dir/rule:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/flags/CMakeFiles/flags_private_handle_accessor.dir/rule
.PHONY : third_party/abseil-cpp/absl/flags/CMakeFiles/flags_private_handle_accessor.dir/rule

# Convenience name for target.
flags_private_handle_accessor: third_party/abseil-cpp/absl/flags/CMakeFiles/flags_private_handle_accessor.dir/rule
.PHONY : flags_private_handle_accessor

# fast build rule for target.
flags_private_handle_accessor/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_private_handle_accessor.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_private_handle_accessor.dir/build
.PHONY : flags_private_handle_accessor/fast

# Convenience name for target.
third_party/abseil-cpp/absl/flags/CMakeFiles/flags_reflection.dir/rule:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/flags/CMakeFiles/flags_reflection.dir/rule
.PHONY : third_party/abseil-cpp/absl/flags/CMakeFiles/flags_reflection.dir/rule

# Convenience name for target.
flags_reflection: third_party/abseil-cpp/absl/flags/CMakeFiles/flags_reflection.dir/rule
.PHONY : flags_reflection

# fast build rule for target.
flags_reflection/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_reflection.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_reflection.dir/build
.PHONY : flags_reflection/fast

# Convenience name for target.
third_party/abseil-cpp/absl/flags/CMakeFiles/flags_internal.dir/rule:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/flags/CMakeFiles/flags_internal.dir/rule
.PHONY : third_party/abseil-cpp/absl/flags/CMakeFiles/flags_internal.dir/rule

# Convenience name for target.
flags_internal: third_party/abseil-cpp/absl/flags/CMakeFiles/flags_internal.dir/rule
.PHONY : flags_internal

# fast build rule for target.
flags_internal/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_internal.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_internal.dir/build
.PHONY : flags_internal/fast

# Convenience name for target.
third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage_internal.dir/rule:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage_internal.dir/rule
.PHONY : third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage_internal.dir/rule

# Convenience name for target.
flags_usage_internal: third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage_internal.dir/rule
.PHONY : flags_usage_internal

# fast build rule for target.
flags_usage_internal/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage_internal.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage_internal.dir/build
.PHONY : flags_usage_internal/fast

# Convenience name for target.
third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage.dir/rule:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage.dir/rule
.PHONY : third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage.dir/rule

# Convenience name for target.
flags_usage: third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage.dir/rule
.PHONY : flags_usage

# fast build rule for target.
flags_usage/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage.dir/build
.PHONY : flags_usage/fast

# Convenience name for target.
third_party/abseil-cpp/absl/flags/CMakeFiles/flags_parse.dir/rule:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/flags/CMakeFiles/flags_parse.dir/rule
.PHONY : third_party/abseil-cpp/absl/flags/CMakeFiles/flags_parse.dir/rule

# Convenience name for target.
flags_parse: third_party/abseil-cpp/absl/flags/CMakeFiles/flags_parse.dir/rule
.PHONY : flags_parse

# fast build rule for target.
flags_parse/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_parse.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_parse.dir/build
.PHONY : flags_parse/fast

commandlineflag.obj: commandlineflag.cc.obj
.PHONY : commandlineflag.obj

# target to build an object file
commandlineflag.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag.dir/commandlineflag.cc.obj
.PHONY : commandlineflag.cc.obj

commandlineflag.i: commandlineflag.cc.i
.PHONY : commandlineflag.i

# target to preprocess a source file
commandlineflag.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag.dir/commandlineflag.cc.i
.PHONY : commandlineflag.cc.i

commandlineflag.s: commandlineflag.cc.s
.PHONY : commandlineflag.s

# target to generate assembly for a file
commandlineflag.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag.dir/commandlineflag.cc.s
.PHONY : commandlineflag.cc.s

internal/commandlineflag.obj: internal/commandlineflag.cc.obj
.PHONY : internal/commandlineflag.obj

# target to build an object file
internal/commandlineflag.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag_internal.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag_internal.dir/internal/commandlineflag.cc.obj
.PHONY : internal/commandlineflag.cc.obj

internal/commandlineflag.i: internal/commandlineflag.cc.i
.PHONY : internal/commandlineflag.i

# target to preprocess a source file
internal/commandlineflag.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag_internal.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag_internal.dir/internal/commandlineflag.cc.i
.PHONY : internal/commandlineflag.cc.i

internal/commandlineflag.s: internal/commandlineflag.cc.s
.PHONY : internal/commandlineflag.s

# target to generate assembly for a file
internal/commandlineflag.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag_internal.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_commandlineflag_internal.dir/internal/commandlineflag.cc.s
.PHONY : internal/commandlineflag.cc.s

internal/flag.obj: internal/flag.cc.obj
.PHONY : internal/flag.obj

# target to build an object file
internal/flag.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_internal.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_internal.dir/internal/flag.cc.obj
.PHONY : internal/flag.cc.obj

internal/flag.i: internal/flag.cc.i
.PHONY : internal/flag.i

# target to preprocess a source file
internal/flag.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_internal.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_internal.dir/internal/flag.cc.i
.PHONY : internal/flag.cc.i

internal/flag.s: internal/flag.cc.s
.PHONY : internal/flag.s

# target to generate assembly for a file
internal/flag.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_internal.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_internal.dir/internal/flag.cc.s
.PHONY : internal/flag.cc.s

internal/private_handle_accessor.obj: internal/private_handle_accessor.cc.obj
.PHONY : internal/private_handle_accessor.obj

# target to build an object file
internal/private_handle_accessor.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_private_handle_accessor.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_private_handle_accessor.dir/internal/private_handle_accessor.cc.obj
.PHONY : internal/private_handle_accessor.cc.obj

internal/private_handle_accessor.i: internal/private_handle_accessor.cc.i
.PHONY : internal/private_handle_accessor.i

# target to preprocess a source file
internal/private_handle_accessor.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_private_handle_accessor.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_private_handle_accessor.dir/internal/private_handle_accessor.cc.i
.PHONY : internal/private_handle_accessor.cc.i

internal/private_handle_accessor.s: internal/private_handle_accessor.cc.s
.PHONY : internal/private_handle_accessor.s

# target to generate assembly for a file
internal/private_handle_accessor.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_private_handle_accessor.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_private_handle_accessor.dir/internal/private_handle_accessor.cc.s
.PHONY : internal/private_handle_accessor.cc.s

internal/program_name.obj: internal/program_name.cc.obj
.PHONY : internal/program_name.obj

# target to build an object file
internal/program_name.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_program_name.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_program_name.dir/internal/program_name.cc.obj
.PHONY : internal/program_name.cc.obj

internal/program_name.i: internal/program_name.cc.i
.PHONY : internal/program_name.i

# target to preprocess a source file
internal/program_name.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_program_name.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_program_name.dir/internal/program_name.cc.i
.PHONY : internal/program_name.cc.i

internal/program_name.s: internal/program_name.cc.s
.PHONY : internal/program_name.s

# target to generate assembly for a file
internal/program_name.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_program_name.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_program_name.dir/internal/program_name.cc.s
.PHONY : internal/program_name.cc.s

internal/usage.obj: internal/usage.cc.obj
.PHONY : internal/usage.obj

# target to build an object file
internal/usage.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage_internal.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage_internal.dir/internal/usage.cc.obj
.PHONY : internal/usage.cc.obj

internal/usage.i: internal/usage.cc.i
.PHONY : internal/usage.i

# target to preprocess a source file
internal/usage.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage_internal.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage_internal.dir/internal/usage.cc.i
.PHONY : internal/usage.cc.i

internal/usage.s: internal/usage.cc.s
.PHONY : internal/usage.s

# target to generate assembly for a file
internal/usage.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage_internal.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage_internal.dir/internal/usage.cc.s
.PHONY : internal/usage.cc.s

marshalling.obj: marshalling.cc.obj
.PHONY : marshalling.obj

# target to build an object file
marshalling.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_marshalling.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_marshalling.dir/marshalling.cc.obj
.PHONY : marshalling.cc.obj

marshalling.i: marshalling.cc.i
.PHONY : marshalling.i

# target to preprocess a source file
marshalling.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_marshalling.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_marshalling.dir/marshalling.cc.i
.PHONY : marshalling.cc.i

marshalling.s: marshalling.cc.s
.PHONY : marshalling.s

# target to generate assembly for a file
marshalling.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_marshalling.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_marshalling.dir/marshalling.cc.s
.PHONY : marshalling.cc.s

parse.obj: parse.cc.obj
.PHONY : parse.obj

# target to build an object file
parse.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_parse.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_parse.dir/parse.cc.obj
.PHONY : parse.cc.obj

parse.i: parse.cc.i
.PHONY : parse.i

# target to preprocess a source file
parse.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_parse.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_parse.dir/parse.cc.i
.PHONY : parse.cc.i

parse.s: parse.cc.s
.PHONY : parse.s

# target to generate assembly for a file
parse.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_parse.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_parse.dir/parse.cc.s
.PHONY : parse.cc.s

reflection.obj: reflection.cc.obj
.PHONY : reflection.obj

# target to build an object file
reflection.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_reflection.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_reflection.dir/reflection.cc.obj
.PHONY : reflection.cc.obj

reflection.i: reflection.cc.i
.PHONY : reflection.i

# target to preprocess a source file
reflection.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_reflection.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_reflection.dir/reflection.cc.i
.PHONY : reflection.cc.i

reflection.s: reflection.cc.s
.PHONY : reflection.s

# target to generate assembly for a file
reflection.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_reflection.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_reflection.dir/reflection.cc.s
.PHONY : reflection.cc.s

usage.obj: usage.cc.obj
.PHONY : usage.obj

# target to build an object file
usage.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage.dir/usage.cc.obj
.PHONY : usage.cc.obj

usage.i: usage.cc.i
.PHONY : usage.i

# target to preprocess a source file
usage.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage.dir/usage.cc.i
.PHONY : usage.cc.i

usage.s: usage.cc.s
.PHONY : usage.s

# target to generate assembly for a file
usage.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_usage.dir/usage.cc.s
.PHONY : usage.cc.s

usage_config.obj: usage_config.cc.obj
.PHONY : usage_config.obj

# target to build an object file
usage_config.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_config.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_config.dir/usage_config.cc.obj
.PHONY : usage_config.cc.obj

usage_config.i: usage_config.cc.i
.PHONY : usage_config.i

# target to preprocess a source file
usage_config.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_config.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_config.dir/usage_config.cc.i
.PHONY : usage_config.cc.i

usage_config.s: usage_config.cc.s
.PHONY : usage_config.s

# target to generate assembly for a file
usage_config.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/flags/CMakeFiles/flags_config.dir/build.make third_party/abseil-cpp/absl/flags/CMakeFiles/flags_config.dir/usage_config.cc.s
.PHONY : usage_config.cc.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... package"
	@echo "... package_source"
	@echo "... rebuild_cache"
	@echo "... flags_commandlineflag"
	@echo "... flags_commandlineflag_internal"
	@echo "... flags_config"
	@echo "... flags_internal"
	@echo "... flags_marshalling"
	@echo "... flags_parse"
	@echo "... flags_private_handle_accessor"
	@echo "... flags_program_name"
	@echo "... flags_reflection"
	@echo "... flags_usage"
	@echo "... flags_usage_internal"
	@echo "... commandlineflag.obj"
	@echo "... commandlineflag.i"
	@echo "... commandlineflag.s"
	@echo "... internal/commandlineflag.obj"
	@echo "... internal/commandlineflag.i"
	@echo "... internal/commandlineflag.s"
	@echo "... internal/flag.obj"
	@echo "... internal/flag.i"
	@echo "... internal/flag.s"
	@echo "... internal/private_handle_accessor.obj"
	@echo "... internal/private_handle_accessor.i"
	@echo "... internal/private_handle_accessor.s"
	@echo "... internal/program_name.obj"
	@echo "... internal/program_name.i"
	@echo "... internal/program_name.s"
	@echo "... internal/usage.obj"
	@echo "... internal/usage.i"
	@echo "... internal/usage.s"
	@echo "... marshalling.obj"
	@echo "... marshalling.i"
	@echo "... marshalling.s"
	@echo "... parse.obj"
	@echo "... parse.i"
	@echo "... parse.s"
	@echo "... reflection.obj"
	@echo "... reflection.i"
	@echo "... reflection.s"
	@echo "... usage.obj"
	@echo "... usage.i"
	@echo "... usage.s"
	@echo "... usage_config.obj"
	@echo "... usage_config.i"
	@echo "... usage_config.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd D:/hw2/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

