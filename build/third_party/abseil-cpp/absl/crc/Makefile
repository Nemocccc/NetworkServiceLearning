# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.31

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = D:/CMake/bin/cmake.exe

# The command to remove a file.
RM = D:/CMake/bin/cmake.exe -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = D:/hw2/grpc

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = D:/hw2/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target package
package: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Run CPack packaging tool..."
	cd D:/hw2/build && D:/CMake/bin/cpack.exe --config ./CPackConfig.cmake
.PHONY : package

# Special rule for the target package
package/fast: package
.PHONY : package/fast

# Special rule for the target package_source
package_source:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Run CPack packaging tool for source..."
	cd D:/hw2/build && D:/CMake/bin/cpack.exe --config ./CPackSourceConfig.cmake D:/hw2/build/CPackSourceConfig.cmake
.PHONY : package_source

# Special rule for the target package_source
package_source/fast: package_source
.PHONY : package_source/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake cache editor..."
	D:/CMake/bin/cmake-gui.exe -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake to regenerate build system..."
	D:/CMake/bin/cmake.exe --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Available install components are: \"Devel\" \"Library\" \"Tools\" \"Unspecified\" \"libprotobuf\" \"libprotobuf-lite\" \"libprotoc\" \"libupb\" \"protobuf-export\" \"protobuf-headers\" \"protoc\" \"upb-generators\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	D:/CMake/bin/cmake.exe -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	D:/CMake/bin/cmake.exe -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	D:/CMake/bin/cmake.exe -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	D:/CMake/bin/cmake.exe -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	D:/CMake/bin/cmake.exe -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	D:/CMake/bin/cmake.exe -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	cd D:/hw2/build && $(CMAKE_COMMAND) -E cmake_progress_start D:/hw2/build/CMakeFiles D:/hw2/build/third_party/abseil-cpp/absl/crc//CMakeFiles/progress.marks
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/crc/all
	$(CMAKE_COMMAND) -E cmake_progress_start D:/hw2/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/crc/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/crc/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/crc/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd D:/hw2/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cpu_detect.dir/rule:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cpu_detect.dir/rule
.PHONY : third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cpu_detect.dir/rule

# Convenience name for target.
crc_cpu_detect: third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cpu_detect.dir/rule
.PHONY : crc_cpu_detect

# fast build rule for target.
crc_cpu_detect/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cpu_detect.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cpu_detect.dir/build
.PHONY : crc_cpu_detect/fast

# Convenience name for target.
third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/rule:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/rule
.PHONY : third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/rule

# Convenience name for target.
crc_internal: third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/rule
.PHONY : crc_internal

# fast build rule for target.
crc_internal/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/build
.PHONY : crc_internal/fast

# Convenience name for target.
third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/rule:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/rule
.PHONY : third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/rule

# Convenience name for target.
crc32c: third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/rule
.PHONY : crc32c

# fast build rule for target.
crc32c/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/build
.PHONY : crc32c/fast

# Convenience name for target.
third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cord_state.dir/rule:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cord_state.dir/rule
.PHONY : third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cord_state.dir/rule

# Convenience name for target.
crc_cord_state: third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cord_state.dir/rule
.PHONY : crc_cord_state

# fast build rule for target.
crc_cord_state/fast:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cord_state.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cord_state.dir/build
.PHONY : crc_cord_state/fast

crc32c.obj: crc32c.cc.obj
.PHONY : crc32c.obj

# target to build an object file
crc32c.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/crc32c.cc.obj
.PHONY : crc32c.cc.obj

crc32c.i: crc32c.cc.i
.PHONY : crc32c.i

# target to preprocess a source file
crc32c.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/crc32c.cc.i
.PHONY : crc32c.cc.i

crc32c.s: crc32c.cc.s
.PHONY : crc32c.s

# target to generate assembly for a file
crc32c.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/crc32c.cc.s
.PHONY : crc32c.cc.s

internal/cpu_detect.obj: internal/cpu_detect.cc.obj
.PHONY : internal/cpu_detect.obj

# target to build an object file
internal/cpu_detect.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cpu_detect.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cpu_detect.dir/internal/cpu_detect.cc.obj
.PHONY : internal/cpu_detect.cc.obj

internal/cpu_detect.i: internal/cpu_detect.cc.i
.PHONY : internal/cpu_detect.i

# target to preprocess a source file
internal/cpu_detect.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cpu_detect.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cpu_detect.dir/internal/cpu_detect.cc.i
.PHONY : internal/cpu_detect.cc.i

internal/cpu_detect.s: internal/cpu_detect.cc.s
.PHONY : internal/cpu_detect.s

# target to generate assembly for a file
internal/cpu_detect.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cpu_detect.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cpu_detect.dir/internal/cpu_detect.cc.s
.PHONY : internal/cpu_detect.cc.s

internal/crc.obj: internal/crc.cc.obj
.PHONY : internal/crc.obj

# target to build an object file
internal/crc.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/internal/crc.cc.obj
.PHONY : internal/crc.cc.obj

internal/crc.i: internal/crc.cc.i
.PHONY : internal/crc.i

# target to preprocess a source file
internal/crc.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/internal/crc.cc.i
.PHONY : internal/crc.cc.i

internal/crc.s: internal/crc.cc.s
.PHONY : internal/crc.s

# target to generate assembly for a file
internal/crc.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/internal/crc.cc.s
.PHONY : internal/crc.cc.s

internal/crc_cord_state.obj: internal/crc_cord_state.cc.obj
.PHONY : internal/crc_cord_state.obj

# target to build an object file
internal/crc_cord_state.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cord_state.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cord_state.dir/internal/crc_cord_state.cc.obj
.PHONY : internal/crc_cord_state.cc.obj

internal/crc_cord_state.i: internal/crc_cord_state.cc.i
.PHONY : internal/crc_cord_state.i

# target to preprocess a source file
internal/crc_cord_state.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cord_state.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cord_state.dir/internal/crc_cord_state.cc.i
.PHONY : internal/crc_cord_state.cc.i

internal/crc_cord_state.s: internal/crc_cord_state.cc.s
.PHONY : internal/crc_cord_state.s

# target to generate assembly for a file
internal/crc_cord_state.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cord_state.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc_cord_state.dir/internal/crc_cord_state.cc.s
.PHONY : internal/crc_cord_state.cc.s

internal/crc_memcpy_fallback.obj: internal/crc_memcpy_fallback.cc.obj
.PHONY : internal/crc_memcpy_fallback.obj

# target to build an object file
internal/crc_memcpy_fallback.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/internal/crc_memcpy_fallback.cc.obj
.PHONY : internal/crc_memcpy_fallback.cc.obj

internal/crc_memcpy_fallback.i: internal/crc_memcpy_fallback.cc.i
.PHONY : internal/crc_memcpy_fallback.i

# target to preprocess a source file
internal/crc_memcpy_fallback.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/internal/crc_memcpy_fallback.cc.i
.PHONY : internal/crc_memcpy_fallback.cc.i

internal/crc_memcpy_fallback.s: internal/crc_memcpy_fallback.cc.s
.PHONY : internal/crc_memcpy_fallback.s

# target to generate assembly for a file
internal/crc_memcpy_fallback.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/internal/crc_memcpy_fallback.cc.s
.PHONY : internal/crc_memcpy_fallback.cc.s

internal/crc_memcpy_x86_arm_combined.obj: internal/crc_memcpy_x86_arm_combined.cc.obj
.PHONY : internal/crc_memcpy_x86_arm_combined.obj

# target to build an object file
internal/crc_memcpy_x86_arm_combined.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/internal/crc_memcpy_x86_arm_combined.cc.obj
.PHONY : internal/crc_memcpy_x86_arm_combined.cc.obj

internal/crc_memcpy_x86_arm_combined.i: internal/crc_memcpy_x86_arm_combined.cc.i
.PHONY : internal/crc_memcpy_x86_arm_combined.i

# target to preprocess a source file
internal/crc_memcpy_x86_arm_combined.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/internal/crc_memcpy_x86_arm_combined.cc.i
.PHONY : internal/crc_memcpy_x86_arm_combined.cc.i

internal/crc_memcpy_x86_arm_combined.s: internal/crc_memcpy_x86_arm_combined.cc.s
.PHONY : internal/crc_memcpy_x86_arm_combined.s

# target to generate assembly for a file
internal/crc_memcpy_x86_arm_combined.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/internal/crc_memcpy_x86_arm_combined.cc.s
.PHONY : internal/crc_memcpy_x86_arm_combined.cc.s

internal/crc_non_temporal_memcpy.obj: internal/crc_non_temporal_memcpy.cc.obj
.PHONY : internal/crc_non_temporal_memcpy.obj

# target to build an object file
internal/crc_non_temporal_memcpy.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/internal/crc_non_temporal_memcpy.cc.obj
.PHONY : internal/crc_non_temporal_memcpy.cc.obj

internal/crc_non_temporal_memcpy.i: internal/crc_non_temporal_memcpy.cc.i
.PHONY : internal/crc_non_temporal_memcpy.i

# target to preprocess a source file
internal/crc_non_temporal_memcpy.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/internal/crc_non_temporal_memcpy.cc.i
.PHONY : internal/crc_non_temporal_memcpy.cc.i

internal/crc_non_temporal_memcpy.s: internal/crc_non_temporal_memcpy.cc.s
.PHONY : internal/crc_non_temporal_memcpy.s

# target to generate assembly for a file
internal/crc_non_temporal_memcpy.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc32c.dir/internal/crc_non_temporal_memcpy.cc.s
.PHONY : internal/crc_non_temporal_memcpy.cc.s

internal/crc_x86_arm_combined.obj: internal/crc_x86_arm_combined.cc.obj
.PHONY : internal/crc_x86_arm_combined.obj

# target to build an object file
internal/crc_x86_arm_combined.cc.obj:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/internal/crc_x86_arm_combined.cc.obj
.PHONY : internal/crc_x86_arm_combined.cc.obj

internal/crc_x86_arm_combined.i: internal/crc_x86_arm_combined.cc.i
.PHONY : internal/crc_x86_arm_combined.i

# target to preprocess a source file
internal/crc_x86_arm_combined.cc.i:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/internal/crc_x86_arm_combined.cc.i
.PHONY : internal/crc_x86_arm_combined.cc.i

internal/crc_x86_arm_combined.s: internal/crc_x86_arm_combined.cc.s
.PHONY : internal/crc_x86_arm_combined.s

# target to generate assembly for a file
internal/crc_x86_arm_combined.cc.s:
	cd D:/hw2/build && $(MAKE) $(MAKESILENT) -f third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/build.make third_party/abseil-cpp/absl/crc/CMakeFiles/crc_internal.dir/internal/crc_x86_arm_combined.cc.s
.PHONY : internal/crc_x86_arm_combined.cc.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... package"
	@echo "... package_source"
	@echo "... rebuild_cache"
	@echo "... crc32c"
	@echo "... crc_cord_state"
	@echo "... crc_cpu_detect"
	@echo "... crc_internal"
	@echo "... crc32c.obj"
	@echo "... crc32c.i"
	@echo "... crc32c.s"
	@echo "... internal/cpu_detect.obj"
	@echo "... internal/cpu_detect.i"
	@echo "... internal/cpu_detect.s"
	@echo "... internal/crc.obj"
	@echo "... internal/crc.i"
	@echo "... internal/crc.s"
	@echo "... internal/crc_cord_state.obj"
	@echo "... internal/crc_cord_state.i"
	@echo "... internal/crc_cord_state.s"
	@echo "... internal/crc_memcpy_fallback.obj"
	@echo "... internal/crc_memcpy_fallback.i"
	@echo "... internal/crc_memcpy_fallback.s"
	@echo "... internal/crc_memcpy_x86_arm_combined.obj"
	@echo "... internal/crc_memcpy_x86_arm_combined.i"
	@echo "... internal/crc_memcpy_x86_arm_combined.s"
	@echo "... internal/crc_non_temporal_memcpy.obj"
	@echo "... internal/crc_non_temporal_memcpy.i"
	@echo "... internal/crc_non_temporal_memcpy.s"
	@echo "... internal/crc_x86_arm_combined.obj"
	@echo "... internal/crc_x86_arm_combined.i"
	@echo "... internal/crc_x86_arm_combined.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd D:/hw2/build && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

